{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/jobdetails.service.ts","webpack:///./src/app/jobdetails/jobdetails.component.css","webpack:///./src/app/jobdetails/jobdetails.component.html","webpack:///./src/app/jobdetails/jobdetails.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\r\\n    margin-left:100px;\\r\\n}\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","\nimport {Component, Inject} from '@angular/core';\n\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent   {\n  \n\n}\n\n\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","import {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {MatNativeDateModule} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\n//import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material.module';\n\nimport {AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component'\n\nimport {RouterModule, Routes} from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { JobdetailsComponent } from './jobdetails/jobdetails.component';\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login',      component: LoginComponent },\n  { path: 'about',      component: AboutComponent },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [\n    HttpClientModule,FormsModule,ReactiveFormsModule,\n    MatNativeDateModule,BrowserModule,BrowserAnimationsModule,MaterialModule, RouterModule.forRoot(appRoutes)\n  ],\n  entryComponents: [AppComponent],\n  declarations: [AppComponent, LoginComponent, HeaderComponent, HomeComponent, AboutComponent, FooterComponent, JobdetailsComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#footer{\\r\\n    position:fixed;\\r\\n    bottom:0;\\r\\n    left:0;\\r\\n    \\r\\n   }\"","module.exports = \"<body>\\n    <mat-toolbar color=\\\"primary\\\" id=\\\"footer\\\">\\n        <mat-toolbar-row>\\n          <span>Custom Toolbar</span>\\n        </mat-toolbar-row>\\n      </mat-toolbar>\\n</body>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div style=\\\"background-color:cornflowerblue\\\">\\n  <span>&nbsp;&nbsp;</span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" >\\n        <mat-icon style=\\\"color:chartreuse\\\">more_horiz</mat-icon>\\n      </button>\\n      <span style=\\\"color:white;padding-left:30px\\\">AG MELCO Elevator Co. L.L.C.</span>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item [routerLink]=\\\"['/home']\\\">\\n              <mat-icon>home</mat-icon>\\n              <span>Home</span>\\n            </button>\\n        <button mat-menu-item [routerLink]=\\\"['/login']\\\">\\n          \\n          <mat-icon>forward</mat-icon>\\n          <span>Login</span>\\n     \\n        </button>\\n        <div *ngIf=\\\"isAdmin\\\">\\n        <button mat-menu-item>\\n          <mat-icon>voicemail</mat-icon>\\n          <span>Check voicemail</span>\\n        </button>\\n       </div>\\n        <button mat-menu-item [routerLink]=\\\"['/about']\\\">\\n          <mat-icon>supervised_user_circle</mat-icon>\\n          <span>About Us</span>\\n        </button>\\n      </mat-menu>\\n    </div>\\n    \\n      \\n      <!-- Copyright 2018 Google Inc. All Rights Reserved.\\n          Use of this source code is governed by an MIT-style license that\\n          can be found in the LICENSE file at http://angular.io/license -->\\n    \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isAdmin = true;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  \n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin:0;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .example-is-mobile .example-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n  }\\r\\n  \\r\\n  h1.example-app-name {\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  \\r\\n  .example-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .example-is-mobile .example-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n       `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n  \\r\\n  .linkFormat  a:hover {\\r\\n    \\r\\n      -webkit-text-decoration-line: none;\\r\\n    \\r\\n              text-decoration-line: none;\\r\\n      color: red;\\r\\n\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\" *ngIf=\\\"shouldRun\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n   \\n    <h1 class=\\\"example-app-name\\\">AG Melco Job Processing</h1>\\n\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\"\\n                         [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n      <mat-nav-list class=\\\"linkFormat\\\">\\n        \\n        <a mat-list-item (click)=\\\"setMenu('home')\\\">Home</a>\\n        <div *ngIf=\\\"!loginStatus else elseBlock\\\">\\n        <a mat-list-item (click)=\\\"setMenu('login')\\\">Login</a>\\n        </div>\\n        <ng-template #elseBlock>\\n            <a mat-list-item (click)=\\\"setMenu('jobdetails')\\\">Job Details</a>\\n            <a mat-list-item (click)=\\\"setMenu('reports')\\\">Reports</a>\\n            <a mat-list-item (click)=\\\"setMenu('admin')\\\">Administration</a>\\n            <a mat-list-item (click)=\\\"logOut()\\\">Logout</a>\\n        </ng-template>\\n        <a mat-list-item (click)=\\\"setMenu('about')\\\">About Us</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <div [ngSwitch]=\\\"selectedMenu\\\">\\n        <div *ngSwitchCase=\\\"'login'\\\">\\n            <div *ngIf=\\\"!loginStatus\\\">\\n            <app-login (isAuthSuccess)=\\\"loginStatusCheck($event)\\\" ></app-login>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"'home'\\\">\\n          <h1>LEADING DISTRIBUTOR OF ELEVETORS AND ESCALATORS</h1>\\n            <p>{{messageToBeDisplayed}}</p>\\n        </div>\\n        <div *ngSwitchCase=\\\"'jobdetails'\\\">\\n            <div style=\\\"margin-left:20px\\\">\\n              <app-jobdetails></app-jobdetails>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"'about'\\\">\\n          <div style=\\\"margin-left:20px\\\">\\n            <app-about></app-about>\\n          </div>\\n        </div>\\n\\n      </div>\\n     \\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit, Input } from '@angular/core';\nimport {ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnDestroy {\n  selectedMenu=\"home\";  //used to store active menu\n  loginStatus=false;  // login status\n  messageToBeDisplayed;\n\n  mobileQuery: MediaQueryList;\n\n  //fillerNav = Array.from({length: 5}, (_, i) => `Nav Item ${i + 1}`);\n\n \n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  shouldRun = true;\n\n  setMenu(menu){\n    this.selectedMenu = menu;\n    this.messageToBeDisplayed = \"\";\n  }\n  logOut(){\n    this.loginStatus = false;\n    this.messageToBeDisplayed = \"You have been logged out successfully\";\n    this.selectedMenu = \"home\";\n    \n  }\n  loginStatusCheck(e){\n    if(!e){\n      this.loginStatus = false;\n    }\n    else if(e && e == \"cancel\"){\n      this.selectedMenu=\"home\";\n    }\n    else{\n      this.loginStatus = true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobdetailsService {\n  url = '/assets/jobdetails.json';\n  url_LN = '/assets/LNDetails.json';\n  constructor(private _http:HttpClient) { }\n  getJobDetails(){\n    \n    return this._http.get(this.url);\n  }\n  getLNDetails(){\n    return this._http.get(this.url_LN);\n  }\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .example-container .detail {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-container .head{\\r\\n    width: 50%;\\r\\n    padding-left: 2%;\\r\\n    padding-top: 2%;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"\\n <div class=\\\"example-container\\\">\\n   <div class=\\\"head\\\">\\n<mat-form-field>\\n  <mat-select placeholder=\\\"Layout Number\\\" [(ngModel)]=\\\"selectedLayout\\\" name=\\\"LNSelect\\\">\\n    <mat-option *ngFor=\\\"let ln of LNMaster\\\"  value=\\\"{{ln.LN}}\\\">\\n      {{ln.LN}}\\n    </mat-option>\\n  </mat-select>\\n \\n</mat-form-field>\\n</div>\\n<div class=\\\"detail\\\">\\n<mat-accordion>\\n  <div *ngFor=\\\"let job of joblist\\\">\\n    <div *ngIf=\\\"job.LN == selectedLayout\\\" >\\n       \\n          \\n            \\n\\n  <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\"\\n                       (closed)=\\\"panelOpenState = false\\\">\\n   \\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Job Section\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        \\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Job Number\\\" value=\\\"{{job.EM_NO}}\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Job Type\\\" value=\\\"{{job.JT}}\\\">\\n        </mat-form-field>\\n\\n\\n  </mat-expansion-panel>\\n\\n  <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\"\\n                       (closed)=\\\"panelOpenState = false\\\">\\n   \\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Elevator Section\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        \\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Elevator Id\\\" value=\\\"{{job.EL_ID}}\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Units\\\" value=\\\"{{job.units}}\\\">\\n        </mat-form-field>\\n\\n\\n  </mat-expansion-panel>\\n  <br/>\\n  <button mat-raised-button color=\\\"primary\\\">Save</button>&nbsp;\\n<button mat-raised-button color=\\\"primary\\\">Cancel</button>\\n  </div>\\n</div>\\n\\n</mat-accordion>\\n</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { JobdetailsService } from 'src/app/jobdetails.service';\n\n@Component({\n  selector: 'app-jobdetails',\n  templateUrl: './jobdetails.component.html',\n  styleUrls: ['./jobdetails.component.css']\n})\nexport class JobdetailsComponent implements OnInit {\n  joblist:any = [];\n  LNMaster:any = [];\n  panelOpenState = false;\n  selectedLayout='';\n  constructor(private js : JobdetailsService) { }\n\n  ngOnInit() {\n    this.js.getJobDetails().subscribe(\n      data => this.joblist = data\n    )\n    this.js.getLNDetails().subscribe(\n      data => this.LNMaster = data\n    )\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    width: 50%;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    padding: 10%;\\r\\n    padding-left: 20%;\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 50%;\\r\\n   \\r\\n  }\\r\\n  \\r\\n  .example-container > button {\\r\\n    width: 20%;\\r\\n   \\r\\n  }\\r\\n  \"","module.exports = \"<form #userData=\\\"ngForm\\\">\\n<div class=\\\"example-container\\\" >\\n  \\n  \\n  \\n    <mat-form-field>\\n      <input matInput placeholder=\\\"User Name\\\" name=\\\"username\\\" ngModel required>\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"passwd\\\" ngModel required>\\n      </mat-form-field>\\n  \\n    <!--<mat-form-field>\\n      <mat-select placeholder=\\\"Select\\\">\\n        <mat-option value=\\\"option\\\">Staff</mat-option>\\n        <mat-option value=\\\"option\\\">Admin</mat-option>\\n      </mat-select>\\n    </mat-form-field> -->\\n \\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Select Role\\\" name=\\\"role\\\" ngModel required>\\n                  <mat-option value=\\\"staff\\\">Staff</mat-option>\\n                  <mat-option value=\\\"admin\\\">Admin</mat-option>\\n                </mat-select>\\n          </mat-form-field>\\n     \\n          <div style=\\\"display: inline-block\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"authenticate(userData.value)\\\">Authenticate</button>\\n    <span>&nbsp;&nbsp;</span>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"authenticate('cancel')\\\">Cancel</button>\\n  </div>\\n  </div>\\n  \\n</form>\\n  <!-- Copyright 2018 Google Inc. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { User } from 'src/app/User';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @Input() loggedIn=true;\n  @Output() isAuthSuccess = new EventEmitter();\n  @Output() status = new EventEmitter();\n\n  //userModel = new User(\"shahnazurs\",\"abcdef\",\"staff\");\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  authenticate(frmData){\n    console.log(frmData);\n    if(frmData == \"cancel\")\n    this.isAuthSuccess.emit('cancel');\n    else if(frmData.username == 'admin' && frmData.passwd == 'admin' && frmData.role!=\"\")\n    {\n      this.isAuthSuccess.emit(this.loggedIn);\n    }\n    else\n    {\n      console.log(\"Authentication failed\");\n      this.isAuthSuccess.emit(false);\n    }\n    \n  }\n\n}\n","\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}